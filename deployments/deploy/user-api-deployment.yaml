apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: user-api
  name: user-api
spec:
  replicas: 2
  template:
    metadata:
      labels:
        service: user-api
    spec:
      containers:
      - image: linden416/udagram-user-api:v1
        name: user-api
        imagePullPolicy: Always          
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"       
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DATABASE
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_PORT
        - name: DB_DIALECT
          valueFrom:
            configMapKeyRef: 
              name: env-config
              key: DB_DIALECT
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef: 
              name: env-config
              key: AWS_REGION
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef: 
              name: env-config
              key: AWS_PROFILE
        - name: S3_MEDIA_BUCKET
          valueFrom:
            configMapKeyRef: 
              name: env-config
              key: S3_MEDIA_BUCKET
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef: 
              name: env-config
              key: JWT_SECRET
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret


